# copyright - metaengineeringconsultants@gmail.com
# abaqus 2017 compatibility 
# bending of stud
# input data
from abaqus import *
from abaqusConstants import *
import __main__

def Macro5():
    import section
    import regionToolset
    import displayGroupMdbToolset as dgm
    import part
    import material
    import assembly
    import step
    import interaction
    import load
    import mesh
    import optimization
    import job
    import sketch
    import visualization
    import xyPlot
    import displayGroupOdbToolset as dgo
    import connectorBehavior
s = mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=100.0)
g, v, d, c = s.geometry, s.vertices, s.dimensions, s.constraints
s.setPrimaryObject(option=STANDALONE)
s.Line(point1=(1, 1),point2=(1, 2))
s.Line(point1=(1, 2),point2=(1, 3))
s.Line(point1=(1, 3),point2=(1, 4))
s.Line(point1=(1, 4),point2=(1, 5))
s.Line(point1=(1, 5),point2=(1, 6))
s.Line(point1=(1, 6),point2=(1, 7))
s.Line(point1=(1, 7),point2=(1, 8))
s.Line(point1=(1, 8),point2=(1, 9))
s.Line(point1=(1, 9),point2=(1, 10))
s.Line(point1=(1, 10),point2=(1, 11))
s.Line(point1=(1, 11),point2=(1, 12))
s.Line(point1=(1, 12),point2=(1, 13))
s.Line(point1=(1, 13),point2=(1, 14))
s.Line(point1=(1, 14),point2=(1, 15))
s.Line(point1=(1, 15),point2=(1, 16))
s.Line(point1=(1, 16),point2=(1, 17))
s.Line(point1=(1, 17),point2=(1, 18))
s.Line(point1=(1, 18),point2=(1, 19))
s.Line(point1=(1, 19),point2=(1, 20))
s.Line(point1=(1, 20),point2=(1, 21))
s.Line(point1=(1, 21),point2=(1, 22))
s.Line(point1=(1, 22),point2=(1, 23))
s.Line(point1=(1, 23),point2=(1, 24))
s.Line(point1=(1, 24),point2=(1, 25))
s.Line(point1=(1, 25),point2=(1, 26))
s.Line(point1=(1, 26),point2=(1, 27))
s.Line(point1=(1, 27),point2=(1, 28))
s.Line(point1=(1, 28),point2=(1, 29))
s.Line(point1=(1, 29),point2=(1, 30))
s.Line(point1=(1, 30),point2=(1, 31))
s.Line(point1=(1, 31),point2=(1, 32))
s.Line(point1=(1, 32),point2=(1, 33))
s.Line(point1=(1, 33),point2=(1, 34))
s.Line(point1=(1, 34),point2=(1, 35))
s.Line(point1=(1, 35),point2=(1, 36))
s.Line(point1=(1, 36),point2=(1, 37))
s.Line(point1=(1, 37),point2=(1, 38))
s.Line(point1=(1, 38),point2=(1, 39))
s.Line(point1=(1, 39),point2=(1, 40))
s.Line(point1=(1, 40),point2=(1, 41))
s.Line(point1=(1, 41),point2=(1, 42))
s.Line(point1=(1, 42),point2=(1, 43))
s.Line(point1=(1, 43),point2=(1, 44))
s.Line(point1=(1, 44),point2=(1, 45))
s.Line(point1=(1, 45),point2=(1, 46))
s.Line(point1=(1, 46),point2=(1, 47))
s.Line(point1=(1, 47),point2=(1, 48))
s.Line(point1=(1, 48),point2=(1, 49))
s.Line(point1=(1, 49),point2=(1, 50))
s.Line(point1=(1, 50),point2=(2, 50))
s.Line(point1=(2, 50),point2=(3, 50))
s.Line(point1=(3, 50),point2=(4, 50))
s.Line(point1=(4, 50),point2=(5, 50))
s.Line(point1=(5, 50),point2=(6, 50))
s.Line(point1=(6, 50),point2=(7, 50))
s.Line(point1=(7, 50),point2=(8, 50))
s.Line(point1=(8, 50),point2=(9, 50))
s.Line(point1=(9, 50),point2=(9, 49))
s.Line(point1=(9, 49),point2=(9, 48))
s.Line(point1=(9, 48),point2=(9, 47))
s.Line(point1=(9, 47),point2=(9, 46))
s.Line(point1=(9, 46),point2=(9, 45))
s.Line(point1=(9, 45),point2=(9, 44))
s.Line(point1=(9, 44),point2=(10, 43))
s.Line(point1=(10, 43),point2=(11, 43))
s.Line(point1=(11, 43),point2=(12, 43))
s.Line(point1=(12, 43),point2=(13, 42))
s.Line(point1=(13, 42),point2=(14, 42))
s.Line(point1=(14, 42),point2=(15, 42))
s.Line(point1=(15, 42),point2=(15, 41))
s.Line(point1=(15, 41),point2=(15, 40))
s.Line(point1=(15, 40),point2=(15, 39))
s.Line(point1=(15, 39),point2=(15, 38))
s.Line(point1=(15, 38),point2=(16, 37))
s.Line(point1=(16, 37),point2=(17, 37))
s.Line(point1=(17, 37),point2=(18, 37))
s.Line(point1=(18, 37),point2=(19, 37))
s.Line(point1=(19, 37),point2=(20, 37))
s.Line(point1=(20, 37),point2=(21, 36))
s.Line(point1=(21, 36),point2=(22, 36))
s.Line(point1=(22, 36),point2=(23, 35))
s.Line(point1=(23, 35),point2=(24, 35))
s.Line(point1=(24, 35),point2=(25, 35))
s.Line(point1=(25, 35),point2=(26, 35))
s.Line(point1=(26, 35),point2=(27, 35))
s.Line(point1=(27, 35),point2=(28, 35))
s.Line(point1=(28, 35),point2=(29, 36))
s.Line(point1=(29, 36),point2=(30, 36))
s.Line(point1=(30, 36),point2=(31, 37))
s.Line(point1=(31, 37),point2=(32, 37))
s.Line(point1=(32, 37),point2=(33, 37))
s.Line(point1=(33, 37),point2=(34, 37))
s.Line(point1=(34, 37),point2=(35, 37))
s.Line(point1=(35, 37),point2=(36, 38))
s.Line(point1=(36, 38),point2=(36, 39))
s.Line(point1=(36, 39),point2=(36, 40))
s.Line(point1=(36, 40),point2=(36, 41))
s.Line(point1=(36, 41),point2=(36, 42))
s.Line(point1=(36, 42),point2=(37, 42))
s.Line(point1=(37, 42),point2=(38, 42))
s.Line(point1=(38, 42),point2=(39, 43))
s.Line(point1=(39, 43),point2=(40, 43))
s.Line(point1=(40, 43),point2=(41, 43))
s.Line(point1=(41, 43),point2=(42, 44))
s.Line(point1=(42, 44),point2=(42, 45))
s.Line(point1=(42, 45),point2=(42, 46))
s.Line(point1=(42, 46),point2=(42, 47))
s.Line(point1=(42, 47),point2=(42, 48))
s.Line(point1=(42, 48),point2=(42, 49))
s.Line(point1=(42, 49),point2=(42, 50))
s.Line(point1=(42, 50),point2=(43, 50))
s.Line(point1=(43, 50),point2=(44, 50))
s.Line(point1=(44, 50),point2=(45, 50))
s.Line(point1=(45, 50),point2=(46, 50))
s.Line(point1=(46, 50),point2=(47, 50))
s.Line(point1=(47, 50),point2=(48, 50))
s.Line(point1=(48, 50),point2=(49, 50))
s.Line(point1=(49, 50),point2=(50, 50))
s.Line(point1=(50, 50),point2=(50, 49))
s.Line(point1=(50, 49),point2=(50, 48))
s.Line(point1=(50, 48),point2=(50, 47))
s.Line(point1=(50, 47),point2=(50, 46))
s.Line(point1=(50, 46),point2=(50, 45))
s.Line(point1=(50, 45),point2=(50, 44))
s.Line(point1=(50, 44),point2=(50, 43))
s.Line(point1=(50, 43),point2=(50, 42))
s.Line(point1=(50, 42),point2=(50, 41))
s.Line(point1=(50, 41),point2=(50, 40))
s.Line(point1=(50, 40),point2=(50, 39))
s.Line(point1=(50, 39),point2=(50, 38))
s.Line(point1=(50, 38),point2=(50, 37))
s.Line(point1=(50, 37),point2=(50, 36))
s.Line(point1=(50, 36),point2=(50, 35))
s.Line(point1=(50, 35),point2=(50, 34))
s.Line(point1=(50, 34),point2=(50, 33))
s.Line(point1=(50, 33),point2=(50, 32))
s.Line(point1=(50, 32),point2=(50, 31))
s.Line(point1=(50, 31),point2=(50, 30))
s.Line(point1=(50, 30),point2=(50, 29))
s.Line(point1=(50, 29),point2=(50, 28))
s.Line(point1=(50, 28),point2=(50, 27))
s.Line(point1=(50, 27),point2=(50, 26))
s.Line(point1=(50, 26),point2=(50, 25))
s.Line(point1=(50, 25),point2=(50, 24))
s.Line(point1=(50, 24),point2=(50, 23))
s.Line(point1=(50, 23),point2=(50, 22))
s.Line(point1=(50, 22),point2=(50, 21))
s.Line(point1=(50, 21),point2=(50, 20))
s.Line(point1=(50, 20),point2=(50, 19))
s.Line(point1=(50, 19),point2=(50, 18))
s.Line(point1=(50, 18),point2=(50, 17))
s.Line(point1=(50, 17),point2=(50, 16))
s.Line(point1=(50, 16),point2=(50, 15))
s.Line(point1=(50, 15),point2=(50, 14))
s.Line(point1=(50, 14),point2=(50, 13))
s.Line(point1=(50, 13),point2=(50, 12))
s.Line(point1=(50, 12),point2=(50, 11))
s.Line(point1=(50, 11),point2=(50, 10))
s.Line(point1=(50, 10),point2=(50, 9))
s.Line(point1=(50, 9),point2=(50, 8))
s.Line(point1=(50, 8),point2=(50, 7))
s.Line(point1=(50, 7),point2=(50, 6))
s.Line(point1=(50, 6),point2=(50, 5))
s.Line(point1=(50, 5),point2=(50, 4))
s.Line(point1=(50, 4),point2=(50, 3))
s.Line(point1=(50, 3),point2=(50, 2))
s.Line(point1=(50, 2),point2=(50, 1))
s.Line(point1=(50, 1),point2=(49, 1))
s.Line(point1=(49, 1),point2=(48, 1))
s.Line(point1=(48, 1),point2=(47, 1))
s.Line(point1=(47, 1),point2=(46, 1))
s.Line(point1=(46, 1),point2=(45, 1))
s.Line(point1=(45, 1),point2=(44, 1))
s.Line(point1=(44, 1),point2=(43, 1))
s.Line(point1=(43, 1),point2=(42, 1))
s.Line(point1=(42, 1),point2=(42, 2))
s.Line(point1=(42, 2),point2=(42, 3))
s.Line(point1=(42, 3),point2=(42, 4))
s.Line(point1=(42, 4),point2=(42, 5))
s.Line(point1=(42, 5),point2=(42, 6))
s.Line(point1=(42, 6),point2=(42, 7))
s.Line(point1=(42, 7),point2=(41, 8))
s.Line(point1=(41, 8),point2=(40, 8))
s.Line(point1=(40, 8),point2=(39, 8))
s.Line(point1=(39, 8),point2=(38, 9))
s.Line(point1=(38, 9),point2=(37, 9))
s.Line(point1=(37, 9),point2=(36, 9))
s.Line(point1=(36, 9),point2=(36, 10))
s.Line(point1=(36, 10),point2=(36, 11))
s.Line(point1=(36, 11),point2=(36, 12))
s.Line(point1=(36, 12),point2=(36, 13))
s.Line(point1=(36, 13),point2=(35, 14))
s.Line(point1=(35, 14),point2=(34, 14))
s.Line(point1=(34, 14),point2=(33, 14))
s.Line(point1=(33, 14),point2=(32, 14))
s.Line(point1=(32, 14),point2=(31, 14))
s.Line(point1=(31, 14),point2=(30, 15))
s.Line(point1=(30, 15),point2=(29, 15))
s.Line(point1=(29, 15),point2=(28, 16))
s.Line(point1=(28, 16),point2=(27, 16))
s.Line(point1=(27, 16),point2=(26, 16))
s.Line(point1=(26, 16),point2=(25, 16))
s.Line(point1=(25, 16),point2=(24, 16))
s.Line(point1=(24, 16),point2=(23, 16))
s.Line(point1=(23, 16),point2=(22, 15))
s.Line(point1=(22, 15),point2=(21, 15))
s.Line(point1=(21, 15),point2=(20, 14))
s.Line(point1=(20, 14),point2=(19, 14))
s.Line(point1=(19, 14),point2=(18, 14))
s.Line(point1=(18, 14),point2=(17, 14))
s.Line(point1=(17, 14),point2=(16, 14))
s.Line(point1=(16, 14),point2=(15, 13))
s.Line(point1=(15, 13),point2=(15, 12))
s.Line(point1=(15, 12),point2=(15, 11))
s.Line(point1=(15, 11),point2=(15, 10))
s.Line(point1=(15, 10),point2=(15, 9))
s.Line(point1=(15, 9),point2=(14, 9))
s.Line(point1=(14, 9),point2=(13, 9))
s.Line(point1=(13, 9),point2=(12, 8))
s.Line(point1=(12, 8),point2=(11, 8))
s.Line(point1=(11, 8),point2=(10, 8))
s.Line(point1=(10, 8),point2=(9, 7))
s.Line(point1=(9, 7),point2=(9, 6))
s.Line(point1=(9, 6),point2=(9, 5))
s.Line(point1=(9, 5),point2=(9, 4))
s.Line(point1=(9, 4),point2=(9, 3))
s.Line(point1=(9, 3),point2=(9, 2))
s.Line(point1=(9, 2),point2=(9, 1))
s.Line(point1=(9, 1),point2=(8, 1))
s.Line(point1=(8, 1),point2=(7, 1))
s.Line(point1=(7, 1),point2=(6, 1))
s.Line(point1=(6, 1),point2=(5, 1))
s.Line(point1=(5, 1),point2=(4, 1))
s.Line(point1=(4, 1),point2=(3, 1))
s.Line(point1=(3, 1),point2=(2, 1))
s.Line(point1=(2, 1),point2=(1, 1))

p = mdb.models["Model-1"].Part(name="S20_002", dimensionality=TWO_D_PLANAR,type=DEFORMABLE_BODY)
p = mdb.models["Model-1"].parts["S20_002"]
p.BaseShell(sketch=s)
s.unsetPrimaryObject()
p = mdb.models["Model-1"].parts["S20_002"]
session.viewports["Viewport: 1"].setValues(displayedObject=p)
del mdb.models["Model-1"].sketches["__profile__"]
session.viewports["Viewport: 1"].partDisplay.setValues(mesh=ON)
session.viewports["Viewport: 1"].partDisplay.meshOptions.setValues(meshTechnique=ON)
session.viewports["Viewport: 1"].partDisplay.geometryOptions.setValues(
referenceRepresentation=OFF)
p = mdb.models["Model-1"].parts["S20_002"]
p.seedPart(size=10, deviationFactor=0.1, minSizeFactor=0.1)
p = mdb.models["Model-1"].parts["S20_002"]
p.generateMesh()
s=p.edges
edges=s.getByBoundingBox(1, 1, 0, 1, 50, 0,)
p.Surface(side1Edges=edges, name="left")
edges=s.findAt(((2, 50, 0),),((3, 50, 0),),((4, 50, 0),),((5, 50, 0),),((6, 50, 0),),((7, 50, 0),),((8, 50, 0),),((9, 50, 0),),((9, 49, 0),),((9, 48, 0),),((9, 47, 0),),((9, 46, 0),),((9, 45, 0),),((9, 44, 0),),((10, 43, 0),),((11, 43, 0),),((12, 43, 0),),((13, 42, 0),),((14, 42, 0),),((15, 42, 0),),((15, 41, 0),),((15, 40, 0),),((15, 39, 0),),((15, 38, 0),),((16, 37, 0),),((17, 37, 0),),((18, 37, 0),),((19, 37, 0),),((20, 37, 0),),((21, 36, 0),),((22, 36, 0),),((23, 35, 0),),((24, 35, 0),),((25, 35, 0),),((26, 35, 0),),((27, 35, 0),),((28, 35, 0),),((29, 36, 0),),((30, 36, 0),),((31, 37, 0),),((32, 37, 0),),((33, 37, 0),),((34, 37, 0),),((35, 37, 0),),((36, 38, 0),),((36, 39, 0),),((36, 40, 0),),((36, 41, 0),),((36, 42, 0),),((37, 42, 0),),((38, 42, 0),),((39, 43, 0),),((40, 43, 0),),((41, 43, 0),),((42, 44, 0),),((42, 45, 0),),((42, 46, 0),),((42, 47, 0),),((42, 48, 0),),((42, 49, 0),),((42, 50, 0),),((43, 50, 0),),((44, 50, 0),),((45, 50, 0),),((46, 50, 0),),((47, 50, 0),),((48, 50, 0),),((49, 50, 0),),((50, 50, 0),),)
p.Surface(side1Edges=edges, name="top")
edges=s.findAt(((50, 49, 0),),((50, 48, 0),),((50, 47, 0),),((50, 46, 0),),((50, 45, 0),),((50, 44, 0),),((50, 43, 0),),((50, 42, 0),),((50, 41, 0),),((50, 40, 0),),((50, 39, 0),),((50, 38, 0),),((50, 37, 0),),((50, 36, 0),),((50, 35, 0),),((50, 34, 0),),((50, 33, 0),),((50, 32, 0),),((50, 31, 0),),((50, 30, 0),),((50, 29, 0),),((50, 28, 0),),((50, 27, 0),),((50, 26, 0),),((50, 25, 0),),((50, 24, 0),),((50, 23, 0),),((50, 22, 0),),((50, 21, 0),),((50, 20, 0),),((50, 19, 0),),((50, 18, 0),),((50, 17, 0),),((50, 16, 0),),((50, 15, 0),),((50, 14, 0),),((50, 13, 0),),((50, 12, 0),),((50, 11, 0),),((50, 10, 0),),((50, 9, 0),),((50, 8, 0),),((50, 7, 0),),((50, 6, 0),),((50, 5, 0),),((50, 4, 0),),((50, 3, 0),),((50, 2, 0),),((50, 1, 0),),)
p.Surface(side1Edges=edges, name="right")
edges=s.findAt(((49, 1, 0),),((48, 1, 0),),((47, 1, 0),),((46, 1, 0),),((45, 1, 0),),((44, 1, 0),),((43, 1, 0),),((42, 1, 0),),((42, 2, 0),),((42, 3, 0),),((42, 4, 0),),((42, 5, 0),),((42, 6, 0),),((42, 7, 0),),((41, 8, 0),),((40, 8, 0),),((39, 8, 0),),((38, 9, 0),),((37, 9, 0),),((36, 9, 0),),((36, 10, 0),),((36, 11, 0),),((36, 12, 0),),((36, 13, 0),),((35, 14, 0),),((34, 14, 0),),((33, 14, 0),),((32, 14, 0),),((31, 14, 0),),((30, 15, 0),),((29, 15, 0),),((28, 16, 0),),((27, 16, 0),),((26, 16, 0),),((25, 16, 0),),((24, 16, 0),),((23, 16, 0),),((22, 15, 0),),((21, 15, 0),),((20, 14, 0),),((19, 14, 0),),((18, 14, 0),),((17, 14, 0),),((16, 14, 0),),((15, 13, 0),),((15, 12, 0),),((15, 11, 0),),((15, 10, 0),),((15, 9, 0),),((14, 9, 0),),((13, 9, 0),),((12, 8, 0),),((11, 8, 0),),((10, 8, 0),),((9, 7, 0),),((9, 6, 0),),((9, 5, 0),),((9, 4, 0),),((9, 3, 0),),((9, 2, 0),),((9, 1, 0),),((8, 1, 0),),((7, 1, 0),),((6, 1, 0),),((5, 1, 0),),((4, 1, 0),),((3, 1, 0),),((2,1,0),),((1.5,1,0),))
p.Surface(side1Edges=edges, name="bottom")
mdb.models["Model-1"].Material(name="Material-1")
mdb.models["Model-1"].materials["Material-1"].Elastic(table=((1E6, 0.3), ))
mdb.models["Model-1"].HomogeneousSolidSection(name="S20_002",
material="Material-1", thickness=None)
f = p.faces
faces= p.faces.findAt(((1,1,0), (50,50,0)), )
region = p.Set(faces=faces, name="S20_002")
p = mdb.models["Model-1"].parts["S20_002"]
p.SectionAssignment(region=region, sectionName="S20_002", offset=0.0,
offsetType=MIDDLE_SURFACE, offsetField="",
thicknessAssignment=FROM_SECTION)
n = p.nodes
nodes = n.getSequenceFromMask(mask=('[#ffffffff:2 #3f ]', ), )
p.Set(nodes=nodes, name='BOT')